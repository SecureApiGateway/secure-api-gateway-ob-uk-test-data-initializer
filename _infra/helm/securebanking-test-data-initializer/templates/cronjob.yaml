---
{{- if eq .Values.deployment.type "CronJob" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Chart.Name }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.seccessfulJobHistoryLimit}}
  startingDeadlineSeconds: {{ .Values.cronjob.startingDeadlineSeconds}}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            appversion: {{ .Chart.AppVersion }}
            chartversion: {{ .Chart.Version }}
        spec:
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.cronjob.image.repo }}:{{ default .Chart.AppVersion .Values.cronjob.image.tag }}"
              imagePullPolicy: {{ .Values.cronjob.image.imagePullPolicy }}
              env:
                - name: ENVIRONMENT.STRICT
                  value: {{ .Values.cronjob.environment.strict | quote }}
                - name: ENVIRONMENT.SAPIGTYPE
                  value: {{ .Values.cronjob.environment.sapigType }}
                - name: ENVIRONMENT.CONFIGTYPE
                  valueFrom:
                    configMapKeyRef:
                      name: core-deployment-config
                      key: CLOUD_TYPE
                - name: IDENTITY_PLATFORM_FQDN # variable to run the command shell, the shell doesn't support variables with dot.
                  valueFrom:
                    configMapKeyRef:
                      name: core-deployment-config
                      key: IDENTITY_PLATFORM_FQDN
                - name: HOSTS.IDENTITY_PLATFORM_FQDN
                  valueFrom:
                    configMapKeyRef:
                      name: core-deployment-config
                      key: IDENTITY_PLATFORM_FQDN
                {{- if eq .Values.cronjob.environment.frPlatformType "FIDC" }}
                - name: USERS.FR_PLATFORM_SERVICE_ACCOUNT_KEY
                  valueFrom:
                    secretKeyRef:
                      name: cloud-service-account
                      key: private-key
                - name: USERS.FR_PLATFORM_SERVICE_ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloud-service-account
                      key: private-id
                {{- else }}
                - name: USERS.FR_PLATFORM_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: am-env-secrets
                      key: AM_PASSWORDS_AMADMIN_CLEAR      
                {{ end }}            
                - name: NAMESPACE
                  value: {{ .Values.cronjob.namespace }}
              command: [ "/bin/sh", "-c" ]
              args:
                - |                 
                  echo "IDENTITY_PLATFORM_FQDN $IDENTITY_PLATFORM_FQDN"
                  until $(curl -X GET --output /dev/null --silent --head --fail -H "X-OpenIDM-Username: anonymous" \
                  -H "X-OpenIDM-Password: anonymous" -H "X-OpenIDM-NoSession: true" \
                  https://$IDENTITY_PLATFORM_FQDN/openidm/info/ping)
                  do
                  echo "IDM not ready"
                  sleep 10
                  done
                  ./initialize
          restartPolicy: {{ .Values.cronjob.restartPolicy }}
{{ end }}
